{"version":3,"sources":["list.ts","game-framework.env.ts","game-framework.ts","tank-tower.ts","base-bullet.ts","bullet.ts","double-barreled-tank-tower.ts","bang-animation.ts","shrapnel.ts","simple-tank-tower.ts","base-tank-bumper.ts","simple-tank-bumper.ts","ammunition.ts","tank.ts","enemy.ts","node_modules/@heroiclabs/nakama-js/dist/nakama-js.umd.js","client.ts","game.ts","node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5qJA,IAAA,WAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;IAEM;AAEF,0BAAA;AAAA;;AACI,SAAK,OAAL,GAAe,KAAK,OAAL,EAAf;AACH;;;;8BAEM;AACH,UAAM,MAAM,GAAG,IAAI,WAAA,CAAA,MAAJ,CAAW,YAAX,EAAyB,gBAAzB,EAA2C,MAA3C,CAAf;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,IAAhB;AAEA,aAAO,MAAP;AACH;;;;;;AAGL,OAAA,CAAA,OAAA,GAAe,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA,IAAA,MAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;IAEa;AAIT,6BAAmB,iBAAnB,EAA8C,IAA9C,EAA0D;AAAA;;AAAvC,SAAA,iBAAA,GAAA,iBAAA;AAHnB,SAAA,mBAAA,GAAsB,CAAtB;AAII,SAAK,KAAL,GAAa,IAAb;AACH;;;;8BAIM;AACH,UAAI,KAAK,UAAT,EAAqB;AACjB,aAAK,mBAAL,IAA4B,KAAK,KAAjC;AACH;AACJ;;;0BAEK,kBAAwB;AAC1B,WAAK,mBAAL,GAA2B,KAAK,iBAAL,GAAyB,gBAApD;AACH;;;wBAVa;AAAK,aAAO,KAAK,mBAAL,GAA2B,CAAlC;AAAsC;;;;;;AAR7D,OAAA,CAAA,iBAAA,GAAA,iBAAA;;IAqBM;;;AAOF,iBAAY,cAAZ,EAAoC,cAApC,EAA4D,UAA5D,EAA8E;AAAA;;AAAA;;AAC1E;AAEA,UAAK,SAAL,GAAiB,cAAjB;AACA,UAAK,SAAL,GAAiB,cAAjB;AAEA,UAAK,OAAL,GAAe,EAAf;AAEA,UAAK,WAAL,GAAmB,gBAAA,CAAA,MAAA,CAAO,cAAP,EAAnB;AACA,UAAK,WAAL,GAAmB,UAAnB;AAT0E;AAU7E;;;;yBAKI,KAA+B,aAAmB;AACnD,MAAA,GAAG,CAAC,SAAJ,GAAgB,KAAK,WAArB;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAK,SAAb,EAAwB,KAAK,SAA7B,EAAwC,KAAK,OAAL,GAAe,WAAvD,EAAoE,CAApE,EAAuE,IAAI,IAAI,CAAC,EAAhF;AACA,MAAA,GAAG,CAAC,IAAJ;AAEA,MAAA,GAAG,CAAC,SAAJ,GAAgB,gBAAA,CAAA,MAAA,CAAO,KAAvB;AAEA,WAAK,IAAL,CAAU,WAAV;AACH;;;yBAEI,aAAmB;AAEpB,WAAK,SAAL,IAAkB,gBAAA,CAAA,OAAA,CAAQ,YAAR,CAAqB,CAArB,IAA0B,KAAK,WAA/B,GAA6C,WAA/D;AACH;;;wBAjBS;AAAK,aAAO,KAAK,OAAL,GAAe,CAAtB;AAA0B;;;wBAChC;AAAK,aAAO,KAAK,OAAL,GAAe,CAAtB;AAA0B;;;;EApBxB,gBAAA,CAAA;;IAuCd;AAEF,+BAAY,UAAZ,EAAsC;AAAA;;AAClC,SAAK,MAAL,GAAc,QAAQ,CAAC,sBAAT,CAAgC,6BAAhC,EAA+D,CAA/D,CAAd;AACA,SAAK,IAAL,CAAU,UAAV;AAEA,IAAA,UAAU,CAAC,QAAX,CAAoB,KAAK,MAAzB;AACH;;;;yBAEI,YAA0B;AAC3B,UAAI,QAAQ,GAAG,EAAf;AAD2B;AAAA;AAAA;;AAAA;AAE3B,6BAAmB,UAAU,CAAC,WAA9B,8HAA2C;AAAA,cAAlC,MAAkC;AACvC,cAAI,OAAO,GAAG,KAAK,gBAAL,CAAsB,MAAM,CAAC,CAAD,CAA5B,EAAiC,MAAM,CAAC,CAAD,CAAvC,CAAd;AACA,UAAA,QAAQ,CAAC,IAAT,CAAc,OAAd;AACH;AAL0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO3B,WAAK,MAAL,CAAY,SAAZ,GAAwB,QAAQ,CAAC,IAAT,CAAc,EAAd,CAAxB;AACH;;;2BAEM,KAAa,OAAa;AAC7B,MAAA,QAAQ,CAAC,cAAT,CAAwB,GAAxB,EAA6B,SAA7B,GAAyC,KAAK,CAAC,QAAN,EAAzC;AACH;;;qCAEgB,KAAa,OAAa;AACvC,aAAO,8CACO,GADP,qCAEU,GAFV,gBAEkB,KAFlB,eAGH,QAHJ;AAIH;;;;;;IAGC;AAGF,oBAAmB,UAAnB,EAA8C,eAA9C,EAAqE;AAAA;;AAAlD,SAAA,UAAA,GAAA,UAAA;AAA2B,SAAA,eAAA,GAAA,eAAA;AAC7C;;;;4BAKI;AACD,UAAI,IAAI,GAAG,IAAI,gBAAA,CAAA,IAAJ,CAAS,OAAT,EAAkB,KAAK,UAAvB,EAAmC,KAAK,WAAxC,CAAX;AACA,UAAI,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS,IAAI,CAAC,KAAL,CAAW,KAAX,GAAmB,CAA5B,EAA+B,IAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,KAAK,IAAI,CAAC,KAAL,CAAW,gBAAnE,EAAqF,EAArF,CAAX;AACA,UAAI,MAAM,GAAG,IAAI,QAAA,CAAA,OAAJ,EAAb;AAEA,UAAI,mBAAmB,GAAG,IAAI,YAAA,CAAA,cAAJ,EAA1B;AACA,MAAA,mBAAmB,CAAC,OAApB,GAA8B,EAA9B;AACA,MAAA,mBAAmB,CAAC,SAApB,GAAgC,EAAhC;AAEA,MAAA,IAAI,CAAC,aAAL,CAAmB,mBAAnB;AAEA,WAAK,mBAAL,GAA2B,IAAI,mBAAJ,CAAwB,IAAI,CAAC,UAA7B,CAA3B;AAGA,UAAM,OAAO,GAAG,KAAK,eAAL,CAAqB,KAAK,UAA1B,EAAsC,KAAK,eAA3C,EAA4D,IAAI,CAAC,KAAL,CAAW,KAAvE,CAAhB;AAEA,UAAM,eAAe,GAAG;AACpB,mBAAW;AAAA,iBAAM,IAAI,CAAC,IAAL,CAAU,MAAA,CAAA,cAAA,CAAe,EAAzB,CAAN;AAAA,SADS;AAEpB,qBAAa;AAAA,iBAAM,IAAI,CAAC,IAAL,CAAU,MAAA,CAAA,cAAA,CAAe,IAAzB,CAAN;AAAA,SAFO;AAGpB,sBAAc;AAAA,iBAAM,IAAI,CAAC,IAAL,CAAU,MAAA,CAAA,cAAA,CAAe,KAAzB,CAAN;AAAA,SAHM;AAIpB,qBAAa;AAAA,iBAAM,IAAI,CAAC,IAAL,CAAU,MAAA,CAAA,cAAA,CAAe,IAAzB,CAAN;AAAA,SAJO;AAKpB,iBAAS;AAAA,iBAAM,QAAQ,EAAd;AAAA,SALW;AAMpB,gBAAQ;AAAA,iBAAM,IAAI,CAAC,WAAL,EAAN;AAAA;AANY,OAAxB;AASA,MAAA,IAAI,CAAC,KAAL,CAAW,cAAX,CAA0B,OAA1B;AACA,MAAA,IAAI,CAAC,KAAL,CAAW,aAAX,CAAyB,IAAzB;AACA,MAAA,IAAI,CAAC,sBAAL,CAA4B,eAA5B;AACA,MAAA,IAAI,CAAC,GAAL;;AAEA,eAAS,QAAT,GAAiB;AACb,YAAI,OAAO,GAAG,IAAI,CAAC,IAAL,EAAd;AADa;AAAA;AAAA;;AAAA;AAEb,gCAAmB,OAAnB,mIAA4B;AAAA,gBAAnB,MAAmB;AACxB,YAAA,IAAI,CAAC,KAAL,CAAW,aAAX,CAAyB,MAAzB;AAEA,gBAAM,QAAQ,GAAuB,MAArC;AACA,gBAAM,SAAS,GAAG,OAAO,QAAQ,CAAC,qBAAhB,IAAyC,UAAzC,GAAsD,QAAQ,CAAC,qBAAT,EAAtD,GAAyF,IAA3G;AAEA,gBAAI,KAAK,GAAG,IAAI,gBAAA,CAAA,gBAAJ,CAAqB,MAArB,EAA6B,OAA7B,EAAsC,SAAtC,CAAZ;AACA,YAAA,IAAI,CAAC,KAAL,CAAW,cAAX,CAA0B,KAA1B;;AAEA,gBAAI,QAAQ,CAAC,gBAAT,IAA6B,SAAjC,EAA4C;AACxC,kBAAI,MAAK,GAAG,IAAI,gBAAA,CAAA,2BAAJ,CAAgC,MAAhC,EAAwC,MAAM,CAAC,SAA/C,EAA0D,QAAQ,CAAC,gBAAnE,EAAqF,SAArF,CAAZ;;AACA,cAAA,IAAI,CAAC,KAAL,CAAW,cAAX,CAA0B,MAA1B;AACH;AACJ;AAfY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBhB;;AAED,WAAK,IAAL,GAAY,IAAZ;AACH;;;8BAEM;AACH,WAAK,IAAL,CAAU,OAAV;AACA,WAAK,KAAL;AACH;;;mCAEc,YAAoB,iBAAyB,YAAkB;AAC1E,UAAI,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAApB,EAAgC,CAAC,EAAjC,EAAqC;AACjC,YAAI,OAAO,GAAG,IAAI,CAAC,MAAL,EAAd;AACA,YAAI,CAAC,OAAL,EACI,OAAO,GAAG,CAAV;AAEJ,QAAA,UAAU,CAAC,IAAX,CAAgB,IAAI,KAAJ,CAAU,UAAU,GAAG,OAAvB,EAAgC,CAAhC,EAAmC,eAAnC,CAAhB;AACH;;AACD,aAAO,UAAP;AACH;;;oCAEe,YAAoB,iBAAyB,YAAkB;AAC3E,UAAI,OAAO,GAAG,IAAI,MAAA,CAAA,IAAJ,EAAd;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAApB,EAAgC,CAAC,EAAjC,EAAqC;AACjC,YAAI,OAAO,GAAG,IAAI,CAAC,MAAL,EAAd;AACA,YAAI,CAAC,OAAL,EACI,OAAO,GAAG,CAAV;AAEJ,QAAA,OAAO,CAAC,IAAR,CAAa,IAAI,OAAA,CAAA,KAAJ,CAAU,UAAU,GAAG,OAAvB,EAAgC,CAAhC,EAAmC,eAAnC,CAAb;AACH;;AACD,aAAO,OAAP;AACH;;;wBAjFa;AAAK,aAAO,GAAP;AAAa;;;wBACjB;AAAK,aAAO,MAAM,CAAC,WAAd;AAA4B;;;;;;AAmFpD,IAAI,QAAQ,GAAG,IAAI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAf;AAEA,QAAQ,CAAC,KAAT;AAEA,QAAQ,CAAC,cAAT,CAAwB,cAAxB,EACK,gBADL,CACsB,OADtB,EAC+B,UAAU,KAAV,EAAe;AACtC,EAAA,QAAQ,CAAC,UAAT,GAAsB,oBAAoB,CAAC,YAAD,EAAe,CAAf,CAA1C;AACA,EAAA,QAAQ,CAAC,eAAT,GAA2B,oBAAoB,CAAC,iBAAD,EAAoB,CAApB,CAA/C;AACA,EAAA,QAAQ,CAAC,OAAT;AACA,EAAA,MAAM,CAAC,KAAP;;AAGA,MAAI,QAAQ,CAAC,aAAb,EAA4B;AACV,IAAA,QAAQ,CAAC,aAAT,CAAwB,IAAxB;AACjB;AACJ,CAXL;;AAaA,SAAS,oBAAT,CAA8B,OAA9B,EAA+C,YAA/C,EAAmE;AAC/D,MAAI,KAAK,GAAsB,QAAQ,CAAC,cAAT,CAAwB,OAAxB,EAAkC,KAAjE;AACA,MAAI,QAAQ,GAAG,QAAQ,CAAC,KAAD,CAAvB;AACA,SAAO,KAAK,CAAC,QAAD,CAAL,GAAkB,YAAlB,GAAiC,QAAxC;AACH;;;AClND,IAAIA,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEN,MAAM,CAACC,MAAP,CAAcM,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBI,IAAtB,CAA2BD,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTE,IAAAA,OAAO,EAAE,UAAUF,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBG,IAAvB,CAA4BD,EAA5B;AACD;AATQ,GAAX;AAYAX,EAAAA,MAAM,CAACC,MAAP,CAAcM,OAAd,GAAwB,IAAxB;AACD;;AAEDP,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIY,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGhB,MAAM,CAACC,MAAP,CAAce,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIT,IAAI,GAAGmB,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAClB,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIC,OAAO,GAAG,KAAd;AACAtB,MAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAItB,IAAI,CAACuB,MAAL,CAAYS,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACJ,IAAN,KAAe,KAAf,IAAwBI,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIZ,OAAJ,EAAa;AACXa,QAAAA,OAAO,CAACC,KAAR;AAEApC,QAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCY,UAAAA,QAAQ,CAACR,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAhB,QAAAA,cAAc,CAACe,OAAf,CAAuB,UAAUc,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIxB,QAAQ,CAAC0B,MAAb,EAAqB;AAAE;AAC5B1B,QAAAA,QAAQ,CAAC0B,MAAT;AACD;AACF;;AAED,QAAIxC,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1BL,MAAAA,EAAE,CAACyB,KAAH;;AACAzB,MAAAA,EAAE,CAAC0B,OAAH,GAAa,YAAY;AACvB5B,QAAAA,QAAQ,CAAC0B,MAAT;AACD,OAFD;AAGD;;AAED,QAAIxC,IAAI,CAACqB,IAAL,KAAc,gBAAlB,EAAoC;AAClCc,MAAAA,OAAO,CAACQ,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAI5C,IAAI,CAACqB,IAAL,KAAc,OAAlB,EAA2B;AACzBc,MAAAA,OAAO,CAACU,KAAR,CAAc,kBAAkB7C,IAAI,CAAC6C,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8C9C,IAAI,CAAC6C,KAAL,CAAWE,KAAvE;AAEAH,MAAAA,kBAAkB;AAElB,UAAII,OAAO,GAAGC,kBAAkB,CAACjD,IAAD,CAAhC;AACAkD,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASJ,kBAAT,GAA8B;AAC5B,MAAII,OAAO,GAAGE,QAAQ,CAACG,cAAT,CAAwB7D,UAAxB,CAAd;;AACA,MAAIwD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACM,MAAR;AACD;AACF;;AAED,SAASL,kBAAT,CAA4BjD,IAA5B,EAAkC;AAChC,MAAIgD,OAAO,GAAGE,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACAP,EAAAA,OAAO,CAACjB,EAAR,GAAavC,UAAb,CAFgC,CAIhC;;AACA,MAAIsD,OAAO,GAAGI,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB;AACAT,EAAAA,OAAO,CAACW,SAAR,GAAoBzD,IAAI,CAAC6C,KAAL,CAAWC,OAA/B;AACAU,EAAAA,UAAU,CAACC,SAAX,GAAuBzD,IAAI,CAAC6C,KAAL,CAAWE,KAAlC;AAEAC,EAAAA,OAAO,CAACU,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EZ,OAAO,CAACY,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOV,OAAP;AAED;;AAED,SAASW,UAAT,CAAoBhE,MAApB,EAA4BoC,EAA5B,EAAgC;AAC9B,MAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AAEA,OAAKF,CAAL,IAAUF,OAAV,EAAmB;AACjB,SAAKG,CAAL,IAAUH,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBE,MAAAA,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,EAAcC,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKjC,EAAR,IAAekC,KAAK,CAACC,OAAN,CAAcF,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAH,KAAwBpC,EAAjE,EAAsE;AACpE8B,QAAAA,OAAO,CAACvD,IAAR,CAAawD,CAAb;AACD;AACF;AACF;;AAED,MAAInE,MAAM,CAACe,MAAX,EAAmB;AACjBmD,IAAAA,OAAO,GAAGA,OAAO,CAACO,MAAR,CAAeT,UAAU,CAAChE,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO8B,OAAP;AACD;;AAED,SAASxB,QAAT,CAAkB1C,MAAlB,EAA0B8B,KAA1B,EAAiC;AAC/B,MAAImC,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,IAAqB,CAACpC,MAAM,CAACe,MAAjC,EAAyC;AACvC,QAAIL,EAAE,GAAG,IAAIgE,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C5C,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACkC,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAtB;AACA6B,IAAAA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,GAAoB,CAAC1B,EAAD,EAAKoB,KAAK,CAAC6C,IAAX,CAApB;AACD,GAJD,MAIO,IAAI3E,MAAM,CAACe,MAAX,EAAmB;AACxB2B,IAAAA,QAAQ,CAAC1C,MAAM,CAACe,MAAR,EAAgBe,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwBjC,MAAxB,EAAgCoC,EAAhC,EAAoC;AAClC,MAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAC7B,EAAD,CAAR,IAAgBpC,MAAM,CAACe,MAA3B,EAAmC;AACjC,WAAOkB,cAAc,CAACjC,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAArB;AACD;;AAED,MAAIvB,aAAa,CAACuB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDvB,EAAAA,aAAa,CAACuB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAb;AAEAtB,EAAAA,cAAc,CAACH,IAAf,CAAoB,CAACX,MAAD,EAASoC,EAAT,CAApB;;AAEA,MAAIwC,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BiE,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOR,UAAU,CAAC9B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqC0C,IAArC,CAA0C,UAAU1C,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASQ,YAAT,CAAsB5C,MAAtB,EAA8BoC,EAA9B,EAAkC;AAChC,MAAIwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAb;AACApC,EAAAA,MAAM,CAACM,OAAP,GAAiB,EAAjB;;AACA,MAAIsE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACxE,GAAP,CAAWC,IAAX,GAAkBL,MAAM,CAACM,OAAzB;AACD;;AAED,MAAIsE,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWI,iBAAX,CAA6BgE,MAAzD,EAAiE;AAC/DI,IAAAA,MAAM,CAACxE,GAAP,CAAWI,iBAAX,CAA6BqB,OAA7B,CAAqC,UAAUkD,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAC/E,MAAM,CAACM,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAON,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAP;AACApC,EAAAA,MAAM,CAACoC,EAAD,CAAN;AAEAwC,EAAAA,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAT;;AACA,MAAIwC,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BiE,MAAxD,EAAgE;AAC9DI,IAAAA,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BsB,OAA5B,CAAoC,UAAUkD,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"game.181db07b.js","sourceRoot":"..","sourcesContent":["export class List<T> extends Array<T> {\r\n\r\n    any(func?: (value: T, index: number, array: T[]) => any): boolean {\r\n        if (func == null)\r\n            return this.length > 0;\r\n\r\n        return this.filter(func).length > 0;\r\n    }\r\n\r\n    firstIndex(func?: (value: T) => boolean): number {\r\n        for (let i = 0; i < this.length; i++) {\r\n            const bool = func(this[i]);\r\n            if (bool) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    remove(obj: (value: T) => boolean): void;\r\n    remove(obj: T): void;\r\n    remove(obj: any) {\r\n        const index = obj == \"function\" ? this.firstIndex(obj) : this.indexOf(obj);\r\n        if (index == -1) return;\r\n        this.splice(index, 1);\r\n    }\r\n\r\n    last() {\r\n        return !this.length ? null : this[this.length - 1];\r\n    }\r\n}","export default class GameEnvironment {\r\n    static get context() { return 'https://raw.githubusercontent.com/pavelDruzhinin/games/master'; }\r\n}","import { List } from \"../common/list\";\r\nimport GameEnvironment from \"./game-framework.env\";\r\nimport { BaseBullet } from './bullets/base-bullet';\r\nimport { IDamagable } from \"./tank/tank\";\r\n\r\nexport class MathLib {\r\n    static getRandomInt(max: number) {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n\r\n    static getAngleRadians(angle: number) {\r\n        return angle / 180.0 * Math.PI;\r\n    }\r\n\r\n    static getTurnPoint(x: number, y: number, angle: number) {\r\n        if (isNaN(angle))\r\n            return null;\r\n\r\n        var angleRadians = this.getAngleRadians(angle);\r\n\r\n        var x1 = x * Math.cos(angleRadians) + y * Math.sin(angleRadians);\r\n        var y1 = - x * Math.sin(angleRadians) + y * Math.cos(angleRadians);\r\n\r\n        return { x: Math.round(x1), y: Math.round(y1) };\r\n    }\r\n}\r\n\r\nexport class Colors {\r\n    static black = \"#000000\";\r\n    static green = '#66ff66';\r\n    static orange = '#ff6600';\r\n    static purple = '#ff0066';\r\n    static blue = \"#3366ff\";\r\n    static red = \"#ff1a1a\";\r\n    static violet = '#6666ff';\r\n\r\n    static getRandomColor() {\r\n        var colors = [this.green, this.orange, this.purple, this.blue];\r\n        var randomColorNumber = MathLib.getRandomInt(colors.length);\r\n        return colors[randomColorNumber];\r\n    }\r\n}\r\n\r\nexport interface BasePhysicEvent {\r\n    fire(scene: Scene): void;\r\n}\r\n\r\nexport class ClashPhysicEvent implements BasePhysicEvent {\r\n    fromObject: BaseBullet;\r\n    toObjects: List<any>;\r\n    animation: BaseAnimation;\r\n\r\n    private _isCancelled = false;\r\n\r\n    constructor(fromObject: BaseBullet, toObjects: List<any>, animation: BaseAnimation) {\r\n        this.fromObject = fromObject;\r\n        this.toObjects = toObjects;\r\n        this.animation = animation;\r\n    }\r\n\r\n    fire(scene: Scene) {\r\n        if (this._isCancelled) {\r\n            return;\r\n        }\r\n\r\n        var fromWidth = this.fromObject.width / 2 * scene.devicePixelRatio;\r\n        var fromHeight = this.fromObject.height / 2 * scene.devicePixelRatio;\r\n        var fromPositionX = this.fromObject.positionX;\r\n        var fromPositionY = this.fromObject.positionY;\r\n\r\n        for (var toObject of this.toObjects) {\r\n            var toWidth = toObject.width / 2 * scene.devicePixelRatio;\r\n            var toHeight = toObject.height / 2 * scene.devicePixelRatio;\r\n            var toPositionX = toObject.positionX;\r\n            var toPositionY = toObject.positionY;\r\n\r\n            if (fromWidth + fromPositionY >= toPositionY - toWidth && fromPositionY - fromWidth <= toPositionY + toWidth &&\r\n                fromPositionX - fromHeight <= toHeight + toPositionX && fromPositionX + fromHeight >= toPositionX - toHeight) {\r\n                this._isCancelled = true;\r\n                scene.removeDrawObject(this.fromObject);\r\n\r\n                const damageObject: IDamagable = <IDamagable>toObject;\r\n\r\n                if (damageObject && !damageObject.damage.isLastDamage(this.fromObject.damage)) {\r\n                    damageObject.damage.remove(this.fromObject.damage);\r\n                } else {\r\n                    scene.removeDrawObject(toObject);\r\n                    this.toObjects.remove(toObject);\r\n                }\r\n\r\n                if (this.animation) {\r\n                    this.animation.setPosition(fromPositionX, toPositionY + toHeight);\r\n                    scene.addAnimation(this.animation);\r\n                }\r\n\r\n                scene.removeEvent(this);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class StrikingDistancePhysicEvent implements BasePhysicEvent {\r\n    private _isCancelled = false;\r\n    private _object: BaseBullet;\r\n    private _strikingPosition: number;\r\n    private _animation: BaseAnimation;\r\n\r\n    constructor(object: BaseBullet, startPositionY: number, strikingDistance: number, animation: BaseAnimation) {\r\n        this._object = object;\r\n        this._strikingPosition = startPositionY - strikingDistance;\r\n        this._animation = animation;\r\n    }\r\n\r\n    fire(scene: Scene) {\r\n        if (this._isCancelled)\r\n            return;\r\n\r\n        if (this._object.positionY <= this._strikingPosition) {\r\n            if (this._animation) {\r\n                this._animation.setPosition(this._object.positionX, this._strikingPosition);\r\n                scene.addAnimation(this._animation);\r\n            }\r\n\r\n            scene.removeDrawObject(this._object);\r\n            scene.removeEvent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class BaseDrawObject {\r\n    abstract draw(ctx: CanvasRenderingContext2D, deviceRatio: number): void;\r\n\r\n    toString() {\r\n        return \"DrawObject\";\r\n    }\r\n}\r\n\r\nexport abstract class BaseDrawObjectPart {\r\n    positionX: number;\r\n    positionY: number;\r\n    setPosition(parentPositionX: number, parentPositionY: number) {\r\n        this.positionX = parentPositionX;\r\n        this.positionY = parentPositionY;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, devicePixelRatio: number, positionX: number, positionY: number) {\r\n        this.setPosition(positionX, positionY);\r\n        this._drawPart(ctx, devicePixelRatio);\r\n    }\r\n\r\n    protected abstract _drawPart(ctx: CanvasRenderingContext2D, devicePixelRatio: number): void;\r\n}\r\n\r\n\r\nexport abstract class BaseAnimation {\r\n    positionX: number;\r\n    positionY: number;\r\n\r\n    get isDestroy() { return false; }\r\n\r\n    animate(ctx: CanvasRenderingContext2D, scene: Scene) {\r\n        if (this.isDestroy) {\r\n            this.destroy(scene);\r\n            return;\r\n        }\r\n\r\n        this._draw(ctx, scene.devicePixelRatio);\r\n    }\r\n\r\n    protected abstract _draw(ctx: CanvasRenderingContext2D, devicePixelRatio: number): void;\r\n\r\n    setPosition(positionX: number, positionY: number) {\r\n        this.positionX = positionX;\r\n        this.positionY = positionY;\r\n    }\r\n\r\n    destroy(scene: Scene) {\r\n        scene.removeAnimation(this);\r\n    }\r\n}\r\n\r\nexport class Scene {\r\n    width: number;\r\n    height: number;\r\n\r\n    private _drawObjects: List<BaseDrawObject> = new List<BaseDrawObject>();\r\n    private _events: List<BasePhysicEvent> = new List<BasePhysicEvent>();\r\n    private _animations: List<BaseAnimation> = new List<BaseAnimation>();\r\n    private _ctx: CanvasRenderingContext2D;\r\n\r\n    constructor(canvasId: string, width: number, height: number) {\r\n\r\n        let scene: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(canvasId);\r\n        height -= 20; // <-- magic constant\r\n\r\n        scene.height = height * this.devicePixelRatio;\r\n        scene.width = width * this.devicePixelRatio;\r\n\r\n        scene.style.width = width + 'px';\r\n        scene.style.height = height + 'px';\r\n\r\n        this._ctx = scene.getContext('2d');\r\n\r\n        this.width = scene.width;\r\n        this.height = scene.height;\r\n    }\r\n\r\n    get devicePixelRatio(): number {\r\n        return (('devicePixelRatio' in window) && (window.devicePixelRatio > 1)) ? window.devicePixelRatio : 1;\r\n    }\r\n\r\n    addDrawObject(drawObject: BaseDrawObject) {\r\n        if (!drawObject.draw) {\r\n            return;\r\n        }\r\n\r\n        this._drawObjects.push(drawObject);\r\n    }\r\n\r\n    addDrawObjects(drawObjects: BaseDrawObject[]) {\r\n        if (!drawObjects.push)\r\n            return;\r\n\r\n        for (var drawObject of drawObjects) {\r\n            this.addDrawObject(drawObject);\r\n        }\r\n    }\r\n\r\n    removeDrawObject(drawObject: BaseDrawObject) {\r\n        if (!drawObject.draw)\r\n            return;\r\n\r\n        this._drawObjects.remove(drawObject);\r\n    }\r\n\r\n    addPhysicEvent(event: BasePhysicEvent) {\r\n        this._events.push(event);\r\n    }\r\n\r\n    removeEvent(event: BasePhysicEvent) {\r\n        this._events.remove(event);\r\n    }\r\n\r\n    addAnimation(animation: BaseAnimation) {\r\n        this._animations.push(animation);\r\n    }\r\n\r\n    removeAnimation(animation: BaseAnimation) {\r\n        this._animations.remove(animation);\r\n    }\r\n\r\n    clear() {\r\n        this._ctx.clearRect(0, 0, this.width, this.height);\r\n    }\r\n\r\n    update() {\r\n        this.clear();\r\n\r\n        for (var drawObject of this._drawObjects) {\r\n            drawObject.draw(this._ctx, this.devicePixelRatio);\r\n        }\r\n\r\n        for (var event of this._events) {\r\n            event.fire(this);\r\n        }\r\n\r\n        for (var animation of this._animations) {\r\n            animation.animate(this._ctx, this);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._ctx = null;\r\n        this._drawObjects = new List<BaseDrawObject>();\r\n        this._events = new List<BasePhysicEvent>();\r\n    }\r\n}\r\n\r\nexport class Game {\r\n    scene: Scene;\r\n    private _interval: number;\r\n\r\n    constructor(canvasId: string, width: number, height: number) {\r\n        this.scene = new Scene(canvasId, width, height);\r\n    }\r\n\r\n    run() {\r\n        this._interval = setInterval(this.scene.update.bind(this.scene), 60);\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this._interval);\r\n    }\r\n\r\n    registerKeyBoardEvents(keyboardEvents: any) {\r\n        document.addEventListener('keydown', function (event) {\r\n            if (!keyboardEvents.hasOwnProperty(event.code))\r\n                return;\r\n\r\n            var keyboardEvent = keyboardEvents[event.code];\r\n            if (typeof keyboardEvent != 'function') {\r\n                console.warn(`Event for key ${event.code} is not a function`);\r\n                return;\r\n            }\r\n\r\n            keyboardEvent();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.stop();\r\n        this.scene.destroy();\r\n    }\r\n}\r\n\r\nexport class GameContext {\r\n    static getFullPath(path: string) {\r\n        var context = GameEnvironment.context;\r\n        return `${context}${path}`;\r\n    }\r\n}\r\n\r\nexport class GameImage extends Image {\r\n    constructor(path: string) {\r\n        super();\r\n        this.src = GameContext.getFullPath(path);\r\n    }\r\n}","import { TankAmunnition } from \"./ammunition\";\r\nimport { BaseBullet } from \"../bullets/base-bullet\";\r\n\r\nexport abstract class TankTower {\r\n    positionX: number;\r\n    positionY: number;\r\n\r\n    constructor(positionX: number, positionY: number) {\r\n        this.setPosition(positionX, positionY);\r\n    }\r\n\r\n    abstract draw(ctx: CanvasRenderingContext2D, deviceRatio: number): void;\r\n\r\n    abstract fire(ammunition: TankAmunnition): BaseBullet[];\r\n\r\n    setPosition(positionX: number, positionY: number) {\r\n        this.positionX = positionX;\r\n        this.positionY = positionY;\r\n    }\r\n}","import { BaseDrawObject } from \"../game-framework\";\r\n\r\nexport abstract class BaseBullet extends BaseDrawObject {\r\n    abstract damage: number;\r\n    protected _radius: number;\r\n    private _speed: number;\r\n    constructor(public positionX: number, public positionY: number, radius: number, speed: number) {\r\n        super();\r\n\r\n        this._radius = radius;\r\n        this._speed = speed;\r\n    }\r\n\r\n    get width() { return this._radius * 2; }\r\n    get height() { return this._radius * 2; }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        this._drawBullet(ctx, deviceRatio);\r\n        this.move(deviceRatio);\r\n    }\r\n\r\n    protected abstract _drawBullet(ctx: CanvasRenderingContext2D, deviceRatio: number): void;\r\n\r\n    move(deviceRatio: number) {\r\n        this.positionY -= this._speed * deviceRatio;\r\n    }\r\n}","import { BaseBullet } from \"./base-bullet\";\r\nimport { Colors } from \"../game-framework\";\r\n\r\nexport class Bullet extends BaseBullet {\r\n    damage: number;\r\n\r\n    constructor(startPositionX: number, startPositionY: number) {\r\n        super(startPositionX, startPositionY, 3, 20);\r\n        this.damage = 10;\r\n    }\r\n\r\n    protected _drawBullet(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        ctx.fillStyle = Colors.red;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.positionX, this.positionY, this._radius * deviceRatio, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n    }\r\n}","import { TankTower } from \"./tank-tower\";\r\nimport { GameImage } from \"../game-framework\";\r\nimport { RechargeTankTower } from \"../game\";\r\nimport { Bullet } from \"../bullets/bullet\";\r\n\r\nexport class DoubleBarreledTankTower extends TankTower {\r\n    rifle1Position: number;\r\n    rifle2Position: number;\r\n    deviceRatio: number;\r\n\r\n    private _towerImage: GameImage;\r\n    private _towerRiffleImage: GameImage;\r\n    private _recharge: RechargeTankTower;\r\n    private _correctPositionY: number;\r\n\r\n    constructor(positionX: number, positionY: number) {\r\n        super(positionX, positionY);\r\n\r\n        this._towerImage = new GameImage(\"/assets/img/tank tower.png\");\r\n        this._towerRiffleImage = new GameImage(\"/assets/img/tank riffle.png\");\r\n\r\n        this._recharge = new RechargeTankTower(4, 0.5);\r\n\r\n        this.rifle1Position = 7;\r\n        this.rifle2Position = -5;\r\n        this._correctPositionY = -28;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        this._recharge.process();\r\n        this.deviceRatio = deviceRatio;\r\n\r\n        this._drawRifle(ctx, this.rifle1Position, deviceRatio);\r\n        this._drawRifle(ctx, this.rifle2Position, deviceRatio);\r\n        this._drawTower(ctx, deviceRatio);\r\n    }\r\n\r\n    private _drawTower(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        ctx.drawImage(this._towerImage,\r\n            this.positionX - 14 * deviceRatio,\r\n            this.positionY - 15 * deviceRatio,\r\n            30 * deviceRatio,\r\n            30 * deviceRatio);\r\n    }\r\n\r\n    private _drawRifle(ctx: CanvasRenderingContext2D, x: number, deviceRatio: number) {\r\n        ctx.drawImage(this._towerRiffleImage,\r\n            this.positionX - x * deviceRatio,\r\n            this.positionY + this._recharge.startRifflePosition + this._correctPositionY * deviceRatio,\r\n            3 * deviceRatio,\r\n            15 * deviceRatio);\r\n    }\r\n\r\n    fire() {\r\n        if (this._recharge.inProccess)\r\n            return [];\r\n\r\n        this._recharge.start(this.deviceRatio);\r\n\r\n        return [\r\n            new Bullet(this.positionX - this.rifle1Position * this.deviceRatio + 1 * this.deviceRatio,\r\n                this.positionY + this._correctPositionY * this.deviceRatio),\r\n            new Bullet(this.positionX - this.rifle2Position * this.deviceRatio + 1 * this.deviceRatio,\r\n                this.positionY + this._correctPositionY * this.deviceRatio)\r\n        ];\r\n    }\r\n}","import { BaseAnimation, GameImage } from \"../game-framework\";\r\n\r\nexport class BangAnimation extends BaseAnimation {\r\n    private _bangImage: GameImage;\r\n    private _increaseCoefEnd: number;\r\n    private _increaseCoef: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._bangImage = new GameImage(\"/assets/img/bang.png\");\r\n        this._increaseCoefEnd = 14;\r\n        this._increaseCoef = 1;\r\n    }\r\n\r\n    get isDestroy() { return this._increaseCoef >= this._increaseCoefEnd; }\r\n\r\n    protected _draw(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        if (this.isDestroy)\r\n            return;\r\n\r\n        var radius = 3 * deviceRatio * this._increaseCoef;\r\n\r\n        ctx.drawImage(this._bangImage, this.positionX - radius / 2, this.positionY - radius / 2, radius, radius);\r\n        this._increaseCoef += 1;\r\n    }\r\n}","import { BaseBullet } from \"./base-bullet\";\r\nimport { BangAnimation } from \"../animations/bang-animation\";\r\nimport { GameImage } from \"../game-framework\";\r\n\r\nexport class Shrapnel extends BaseBullet {\r\n    strikingDistance: number;\r\n    damage: number;\r\n\r\n    private _shrapnelImage: GameImage;\r\n\r\n    constructor(startPositionX: number, startPositionY: number) {\r\n        super(startPositionX, startPositionY, 6, 40);\r\n\r\n        this._shrapnelImage = new GameImage(\"/assets/img/bullet.png\");\r\n        this.strikingDistance = 500;\r\n        this.damage = 30;\r\n    }\r\n\r\n    protected _drawBullet(ctx: CanvasRenderingContext2D, devicePixelRatio: number) {\r\n        ctx.drawImage(this._shrapnelImage, this.positionX, this.positionY, 3 * devicePixelRatio, 7 * devicePixelRatio);\r\n    }\r\n\r\n    createStrikeAnimation() {\r\n        return new BangAnimation();\r\n    }\r\n}","import { TankTower } from \"./tank-tower\";\r\nimport { Shrapnel } from \"../bullets/shrapnel\";\r\nimport { GameImage } from \"../game-framework\";\r\nimport { RechargeTankTower } from \"../game\";\r\nimport { TankAmunnition } from \"./ammunition\";\r\n\r\nexport class SimpleTankTower extends TankTower {\r\n    deviceRatio: number;\r\n\r\n    protected _towerImage: GameImage;\r\n    protected _towerRiffleImage: GameImage;\r\n    private _recharge: RechargeTankTower;\r\n\r\n    constructor(positionX: number, positionY: number) {\r\n        super(positionX, positionY);\r\n\r\n        this._towerImage = new GameImage(\"/assets/img/tank tower.png\");\r\n        this._towerRiffleImage = new GameImage(\"/assets/img/tank riffle.png\");\r\n\r\n        this._recharge = new RechargeTankTower(6, 1);\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        this._recharge.process();\r\n        //ctx.imageSmoothingEnabled = false;\r\n        this.deviceRatio = deviceRatio;\r\n        ctx.drawImage(this._towerRiffleImage,\r\n            this.positionX,\r\n            (this.positionY - 45 * deviceRatio + this._recharge.startRifflePosition),\r\n            3 * deviceRatio,\r\n            30 * deviceRatio);\r\n        ctx.drawImage(this._towerImage,\r\n            (this.positionX - 14 * deviceRatio),\r\n            (this.positionY - 15 * deviceRatio),\r\n            30 * deviceRatio,\r\n            30 * deviceRatio);\r\n    }\r\n\r\n    fire(ammunition: TankAmunnition) {\r\n        if (this._recharge.inProccess)\r\n            return [];\r\n\r\n        if (!ammunition.shrapnels)\r\n            return;\r\n\r\n        this._recharge.start(this.deviceRatio);\r\n\r\n        return [new Shrapnel((this.positionX), (this.positionY - 50 * this.deviceRatio))];\r\n    }\r\n}","import { MathLib } from \"../game-framework\";\r\n\r\nexport abstract class BaseTankBumber {\r\n    positionY: number;\r\n    positionX: number;\r\n    protected _bumberWidth: number;\r\n    protected _bumberHeight: number;\r\n\r\n    constructor(positionX: number, positionY: number) {\r\n        this.setPosition(positionX, positionY);\r\n    }\r\n\r\n    setPosition(positionX: number, positionY: number) {\r\n        this.positionX = positionX;\r\n        this.positionY = positionY;\r\n    }\r\n\r\n    abstract draw(ctx: CanvasRenderingContext2D, deviceRatio: number): void;\r\n\r\n    turn(isLeft: boolean) {\r\n        const angle = isLeft ? -90 : 90;\r\n\r\n        const newPoint = MathLib.getTurnPoint(this._bumberWidth, this._bumberHeight, angle);\r\n\r\n        this._bumberWidth = newPoint.x;\r\n        this._bumberHeight = newPoint.y;\r\n    }\r\n}","import { MathLib, GameImage } from \"../game-framework\";\r\nimport { BaseTankBumber } from \"./base-tank-bumper\";\r\n\r\nexport class SimpleTankBumber extends BaseTankBumber {\r\n    protected _bumberHeight = 55;\r\n    protected _bumberWidth = 40;\r\n    private _angle = 0;\r\n    private _image: GameImage;\r\n\r\n    constructor(positionX: number, positionY: number) {\r\n        super(positionX, positionY);\r\n\r\n        this._image = new GameImage(\"/assets/img/tank bumper.png\");\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        ctx.setTransform(1, 0, 0, 1, this.positionX, this.positionY); // sets scale and origin\r\n        ctx.rotate(MathLib.getAngleRadians(this._angle));\r\n        const bumperWidth = this._bumberWidth * deviceRatio;\r\n        const bumperHeight = this._bumberHeight * deviceRatio;\r\n\r\n        ctx.drawImage(this._image, -bumperWidth / 2,\r\n            -bumperHeight / 2,\r\n            bumperWidth,\r\n            bumperHeight);\r\n\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n\r\n    turn(isLeft: boolean = false) {\r\n        const angle = isLeft ? -90 : 90;\r\n\r\n        this._angle += angle;\r\n    }\r\n}","export class TankAmunnition {\r\n    private readonly _ammunitions = new Map<string, number>();\r\n    private _observables: ((key: string, value: number) => void)[] = [];\r\n\r\n    get ammunitions(): Map<string, number> {\r\n        return this._ammunitions;\r\n    }\r\n\r\n    constructor() {\r\n        this.bullets = 0;\r\n        this.shrapnels = 0;\r\n    }\r\n\r\n    get bullets() { return this._give('bullets'); }\r\n    set bullets(value) { this._ammunitions.set('bullets', value); }\r\n\r\n    get shrapnels() { return this._give('shrapnels'); }\r\n    set shrapnels(value) { this._ammunitions.set('shrapnels', value); }\r\n\r\n    add(ammunition: TankAmunnition) {\r\n        for (const addShell of ammunition._ammunitions) {\r\n            const shells = this._ammunitions.get(addShell[0]);\r\n            if (shells == undefined) {\r\n                console.warn(`Nonknown shells in ammunitions: ${addShell[0]}`);\r\n                continue;\r\n            }\r\n            this._ammunitions.set(addShell[0], shells + addShell[1]);\r\n        }\r\n    }\r\n\r\n    private _give(key: string): number {\r\n        let shells = this._ammunitions.get(key);\r\n        if (!shells)\r\n            return 0;\r\n\r\n        shells--;\r\n        this.fireChangeEvent(key, shells);\r\n        this._ammunitions.set(key, shells);\r\n        return shells;\r\n    }\r\n\r\n    onchange(observable: (key: string, value: number) => void) {\r\n        this._observables.push(observable);\r\n    }\r\n\r\n    fireChangeEvent(key: string, value: number) {\r\n        for (var observable of this._observables) {\r\n            observable(key, value);\r\n        }\r\n    }\r\n}","import { BaseDrawObject, Colors } from \"../game-framework\";\r\nimport { DoubleBarreledTankTower } from \"./double-barreled-tank-tower\"\r\nimport { SimpleTankTower } from \"./simple-tank-tower\"\r\nimport { SimpleTankBumber } from \"./simple-tank-bumper\";\r\nimport { TankAmunnition } from \"./ammunition\";\r\nimport { TankTower } from \"./tank-tower\";\r\n\r\nexport class Damage extends BaseDrawObject {\r\n    health: number;\r\n    positionX: number;\r\n    positionY: number;\r\n\r\n    constructor(positionX: number, positionY: number) {\r\n        super();\r\n        this.health = 100;\r\n        this.setPosition(positionX, positionY);\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        ctx.rect(this.positionX, this.positionY, this.health, 10);\r\n        ctx.fillStyle = Colors.green;\r\n        ctx.fillRect(this.positionX, this.positionY, this.health, 10);\r\n    }\r\n\r\n    setPosition(positionX: number, positionY: number) {\r\n        this.positionX = positionX;\r\n        this.positionY = positionY;\r\n    }\r\n\r\n    remove(damage: number) {\r\n        this.health -= damage;\r\n    }\r\n\r\n    isLastDamage(damage: number) {\r\n        return this.health - damage < 0;\r\n    }\r\n}\r\n\r\nexport interface IDamagable {\r\n    damage: Damage;\r\n}\r\n\r\nexport enum TankDirections {\r\n    Up,\r\n    Down,\r\n    Right,\r\n    Left\r\n}\r\n\r\nexport class Tank extends BaseDrawObject implements IDamagable {\r\n    positionX: number;\r\n    positionY: number;\r\n    speed: number;\r\n    tower: TankTower;\r\n    damage: Damage;\r\n    deviceRatio: number;\r\n    ammunition = new TankAmunnition();\r\n\r\n    private _currentDirection: TankDirections = TankDirections.Up;\r\n    private _bumberHeight = 40;\r\n    private _bumberWidth = 30;\r\n\r\n    private _bumber: SimpleTankBumber;\r\n    private _towers: TankTower[];\r\n\r\n    constructor(startPositionX: number, startPositionY: number, speed: number) {\r\n        super();\r\n\r\n        this.positionX = startPositionX;\r\n        this.positionY = startPositionY;\r\n        this.speed = speed;\r\n\r\n        this._bumber = new SimpleTankBumber(startPositionX, startPositionY);\r\n        this._towers = [\r\n            new SimpleTankTower(startPositionX, startPositionY),\r\n            new DoubleBarreledTankTower(startPositionX, startPositionY)\r\n        ];\r\n        this.tower = this._towers[0];\r\n\r\n        this.damage = new Damage(startPositionX - 50, startPositionY + 60);\r\n    }\r\n\r\n    addAmunnition(ammunition: TankAmunnition) {\r\n        this.ammunition.add(ammunition);\r\n    }\r\n\r\n    changeTower() {\r\n        var tankTower = this._towers.filter((el) => el != this.tower)[0];\r\n        tankTower.setPosition(this.positionX, this.positionY);\r\n\r\n        this.tower = tankTower;\r\n    }\r\n\r\n    move(direction: TankDirections) {\r\n        if (this._currentDirection != direction) {\r\n            this._turn(direction);\r\n            return;\r\n        }\r\n\r\n        switch (direction) {\r\n            case TankDirections.Up:\r\n                this.positionY -= this.speed * this.deviceRatio;\r\n                break;\r\n            case TankDirections.Down:\r\n                this.positionY += this.speed * this.deviceRatio;\r\n                break;\r\n            case TankDirections.Right:\r\n                this.positionX += this.speed * this.deviceRatio;\r\n                break;\r\n            case TankDirections.Left:\r\n                this.positionX -= this.speed * this.deviceRatio;\r\n                break;\r\n        }\r\n    }\r\n\r\n    _turn(direction: TankDirections) {\r\n        var directions = [TankDirections.Up, TankDirections.Right, TankDirections.Down, TankDirections.Left];\r\n\r\n        var currentDirectionIndex = directions.indexOf(this._currentDirection);\r\n\r\n        var currentDirectionScope = this.getCurrentDirectionScope(directions, currentDirectionIndex);\r\n        console.log(currentDirectionScope);\r\n\r\n        var currentDirectionScopeIndex = currentDirectionScope.indexOf(this._currentDirection);\r\n        var whereDirectionIndex = currentDirectionScope.indexOf(direction);\r\n\r\n        if (whereDirectionIndex == -1) {\r\n            whereDirectionIndex = 2;\r\n        }\r\n\r\n        if (whereDirectionIndex > currentDirectionScopeIndex) {\r\n            currentDirectionIndex++;\r\n            if (currentDirectionIndex > directions.length - 1)\r\n                currentDirectionIndex = 0;\r\n\r\n            this._bumber.turn();\r\n\r\n        } else {\r\n            currentDirectionIndex--;\r\n            if (currentDirectionIndex < 0)\r\n                currentDirectionIndex = directions.length - 1;\r\n\r\n            this._bumber.turn(true);\r\n        }\r\n        // console.log('previous current direction', this._currentDirection);\r\n        this._currentDirection = directions[currentDirectionIndex];\r\n        // console.log('next', this._currentDirection);\r\n    }\r\n\r\n    getCurrentDirectionScope(directions: TankDirections[], currentIndex: number) {\r\n        var scope = [directions[currentIndex]];\r\n        var nextIndex = currentIndex + 1;\r\n        var prevIndex = currentIndex - 1;\r\n\r\n        if (nextIndex > directions.length - 1) {\r\n            nextIndex = 0;\r\n        }\r\n\r\n        if (prevIndex < 0) {\r\n            prevIndex = directions.length - 1;\r\n        }\r\n\r\n        scope.unshift(directions[prevIndex]);\r\n        scope.push(directions[nextIndex]);\r\n        console.log('scope indexes', prevIndex, currentIndex, nextIndex);\r\n        return scope;\r\n    }\r\n\r\n    fire() {\r\n        return this.tower.fire(this.ammunition);\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, deviceRatio: number): void {\r\n        this.deviceRatio = deviceRatio;\r\n        this._bumber.setPosition(this.positionX, this.positionY);\r\n        this._bumber.draw(ctx, deviceRatio);\r\n        this.tower.setPosition(this.positionX, this.positionY);\r\n        this.tower.draw(ctx, deviceRatio);\r\n        this.damage.setPosition(this.positionX - 50, this.positionY + 60);\r\n        this.damage.draw(ctx, deviceRatio);\r\n    }\r\n}\r\n\r\n","import { BaseDrawObject, BaseDrawObjectPart, MathLib, GameImage } from \"../game-framework\";\r\nimport { Bullet } from \"../bullets/bullet\";\r\nimport { Damage, IDamagable } from \"../tank/tank\";\r\n\r\nexport class Enemy extends BaseDrawObject implements IDamagable {\r\n    positionX: number;\r\n    positionY: number;\r\n    damage: Damage;\r\n    width: number;\r\n    height: number;\r\n\r\n    private _speedLevel: number;\r\n    private _head: EnemyHead;\r\n    private _gun1: EnemyGun;\r\n    private _gun2: EnemyGun;\r\n\r\n    constructor(startPositionX: number, startPositionY: number, speedLevel: number) {\r\n        super();\r\n\r\n        this.positionX = startPositionX;\r\n        this.positionY = startPositionY;\r\n        this._speedLevel = speedLevel;\r\n\r\n        this._head = new EnemyHead();\r\n        this._gun1 = new EnemyGun();\r\n        this._gun2 = new EnemyGun();\r\n\r\n        this.damage = new Damage(startPositionX, startPositionY - 20);\r\n        this.width = 30;\r\n        this.height = 60;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        this._head.draw(ctx, deviceRatio, this.positionX, this.positionY);\r\n        this._gun1.draw(ctx, deviceRatio, this.positionX - 12 * deviceRatio, this.positionY + 30 * deviceRatio);\r\n        this._gun2.draw(ctx, deviceRatio, this.positionX + 50 * deviceRatio, this.positionY + 30 * deviceRatio);\r\n\r\n        this.damage.setPosition(this.positionX, this.positionY - 20);\r\n        this.damage.draw(ctx, deviceRatio);\r\n\r\n        this.move(deviceRatio);\r\n    }\r\n\r\n    move(deviceRatio: number) {\r\n        this.positionY += MathLib.getRandomInt(2) * this._speedLevel * deviceRatio;\r\n    }\r\n\r\n    fire() {\r\n        return this._gun1.fire();\r\n    }\r\n}\r\n\r\nclass EnemyHead extends BaseDrawObjectPart {\r\n    width: number;\r\n    height: number;\r\n\r\n    private _imageHead: GameImage;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._imageHead = new GameImage(\"/assets/img/enemy head.png\");\r\n        this.width = 50;\r\n        this.height = 75;\r\n    }\r\n\r\n    protected _drawPart(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        ctx.drawImage(this._imageHead,\r\n            this.positionX,\r\n            this.positionY,\r\n            this.width * deviceRatio,\r\n            this.height * deviceRatio);\r\n    }\r\n}\r\n\r\nclass EnemyGun extends BaseDrawObjectPart {\r\n    width: number;\r\n    height: number;\r\n\r\n    private _imageGun: GameImage;\r\n    private _pistols: EnemyGunPistol[];\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.width = 12;\r\n        this.height = 12;\r\n\r\n        this._imageGun = new GameImage(\"/assets/img/enemy gun.png\");\r\n        this._pistols = [\r\n            new EnemyGunPistol(),\r\n            new EnemyGunPistol(),\r\n            new EnemyGunPistol(),\r\n            new EnemyGunPistol()\r\n        ];\r\n    }\r\n\r\n    protected _drawPart(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        ctx.drawImage(this._imageGun, this.positionX, this.positionY, this.width * deviceRatio, this.height * deviceRatio);\r\n        for (var i = 0; i < this._pistols.length; i++) {\r\n            this._pistols[i].draw(ctx, deviceRatio, this.positionX + this._pistols[i].width * deviceRatio * i, this.positionY + 10 * deviceRatio);\r\n        }\r\n    }\r\n\r\n    fire() {\r\n        return [new Bullet(this.positionX, this.positionY)];\r\n    }\r\n}\r\n\r\nclass EnemyGunPistol extends BaseDrawObjectPart {\r\n    width: number;\r\n    height: number;\r\n\r\n    private _imageGunPistol: GameImage;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._imageGunPistol = new GameImage(\"/assets/img/enemy gun pistol.png\");\r\n\r\n        this.width = 3;\r\n        this.height = 20;\r\n    }\r\n\r\n    _drawPart(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        ctx.drawImage(this._imageGunPistol, this.positionX, this.positionY, this.width * deviceRatio, this.height * deviceRatio);\r\n    }\r\n}\r\n\r\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.nakamajs = {})));\n}(this, (function (exports) { 'use strict';\n\n(function () {\n\n  var object =\n    typeof exports != 'undefined' ? exports :\n    typeof self != 'undefined' ? self : // #8: web workers\n    $.global; // #31: ExtendScript\n\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    var str = String(input);\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next str index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      str.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = str.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    var str = String(input).replace(/[=]+$/, ''); // #31: ExtendScript bad parse of /=\n    if (str.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = str.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n(function(self) {\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue+','+value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push(name); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) { items.push(value); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push([name, value]); });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = 'status' in options ? options.status : 200;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  };\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : window);\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\n\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar BASE_PATH = \"http://127.0.0.1:80\";\r\nvar NakamaApi = function (configuration) {\r\n    if (configuration === void 0) { configuration = {\r\n        basePath: BASE_PATH,\r\n        bearerToken: \"\",\r\n        password: \"\",\r\n        username: \"\",\r\n        timeoutMs: 5000,\r\n    }; }\r\n    return {\r\n        healthcheck: function (options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/healthcheck\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        getAccount: function (options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/v2/account\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        updateAccount: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"PUT\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        authenticateCustom: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/authenticate/custom\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        authenticateDevice: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/authenticate/device\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        authenticateEmail: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/authenticate/email\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        authenticateFacebook: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/authenticate/facebook\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        authenticateGameCenter: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/authenticate/gamecenter\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        authenticateGoogle: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/authenticate/google\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        authenticateSteam: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/authenticate/steam\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        linkCustom: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/link/custom\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        linkDevice: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/link/device\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        linkEmail: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/link/email\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        linkFacebook: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/link/facebook\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        linkGameCenter: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/link/gamecenter\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        linkGoogle: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/link/google\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        linkSteam: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/link/steam\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        unlinkCustom: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/unlink/custom\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        unlinkDevice: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/unlink/device\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        unlinkEmail: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/unlink/email\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        unlinkFacebook: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/unlink/facebook\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        unlinkGameCenter: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/unlink/gamecenter\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        unlinkGoogle: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/unlink/google\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        unlinkSteam: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/account/unlink/steam\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        listChannelMessages: function (channelId, limit, forward, cursor, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (channelId === null || channelId === undefined) {\r\n                throw new Error(\"'channelId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/channel/{channel_id}\"\r\n                .replace(\"{channel_id}\", encodeURIComponent(String(channelId)));\r\n            var queryParams = {\r\n                limit: limit,\r\n                forward: forward,\r\n                cursor: cursor,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        deleteFriends: function (ids, usernames, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/v2/friend\";\r\n            var queryParams = {\r\n                ids: ids,\r\n                usernames: usernames,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"DELETE\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        listFriends: function (options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/v2/friend\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        addFriends: function (options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/v2/friend\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        blockFriends: function (options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/v2/friend/block\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        importFacebookFriends: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/friend/facebook\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        listGroups: function (name, cursor, limit, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/v2/group\";\r\n            var queryParams = {\r\n                name: name,\r\n                cursor: cursor,\r\n                limit: limit,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        createGroup: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/group\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        deleteGroup: function (groupId, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/group/{group_id}\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"DELETE\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        updateGroup: function (groupId, body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/group/{group_id}\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"PUT\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        addGroupUsers: function (groupId, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/group/{group_id}/add\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        joinGroup: function (groupId, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/group/{group_id}/join\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        kickGroupUsers: function (groupId, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/group/{group_id}/kick\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        leaveGroup: function (groupId, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/group/{group_id}/leave\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        promoteGroupUsers: function (groupId, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/group/{group_id}/promote\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        listGroupUsers: function (groupId, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/group/{group_id}/user\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        deleteLeaderboardRecord: function (leaderboardId, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (leaderboardId === null || leaderboardId === undefined) {\r\n                throw new Error(\"'leaderboardId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/leaderboard/{leaderboard_id}\"\r\n                .replace(\"{leaderboard_id}\", encodeURIComponent(String(leaderboardId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"DELETE\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        listLeaderboardRecords: function (leaderboardId, ownerIds, limit, cursor, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (leaderboardId === null || leaderboardId === undefined) {\r\n                throw new Error(\"'leaderboardId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/leaderboard/{leaderboard_id}\"\r\n                .replace(\"{leaderboard_id}\", encodeURIComponent(String(leaderboardId)));\r\n            var queryParams = {\r\n                owner_ids: ownerIds,\r\n                limit: limit,\r\n                cursor: cursor,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        writeLeaderboardRecord: function (leaderboardId, body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (leaderboardId === null || leaderboardId === undefined) {\r\n                throw new Error(\"'leaderboardId' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/leaderboard/{leaderboard_id}\"\r\n                .replace(\"{leaderboard_id}\", encodeURIComponent(String(leaderboardId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        listMatches: function (limit, authoritative, label, minSize, maxSize, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/v2/match\";\r\n            var queryParams = {\r\n                limit: limit,\r\n                authoritative: authoritative,\r\n                label: label,\r\n                min_size: minSize,\r\n                max_size: maxSize,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        deleteNotifications: function (ids, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/v2/notification\";\r\n            var queryParams = {\r\n                ids: ids,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"DELETE\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        listNotifications: function (limit, cacheableCursor, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/v2/notification\";\r\n            var queryParams = {\r\n                limit: limit,\r\n                cacheable_cursor: cacheableCursor,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        rpcFunc2: function (id, payload, httpKey, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (id === null || id === undefined) {\r\n                throw new Error(\"'id' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/rpc/{id}\"\r\n                .replace(\"{id}\", encodeURIComponent(String(id)));\r\n            var queryParams = {\r\n                payload: payload,\r\n                http_key: httpKey,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        rpcFunc: function (id, body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (id === null || id === undefined) {\r\n                throw new Error(\"'id' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/rpc/{id}\"\r\n                .replace(\"{id}\", encodeURIComponent(String(id)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        readStorageObjects: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/storage\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"POST\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        writeStorageObjects: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/storage\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"PUT\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        deleteStorageObjects: function (body, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/storage/delete\";\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"PUT\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            fetchOptions.body = JSON.stringify(body || {});\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        listStorageObjects: function (collection, userId, limit, cursor, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (collection === null || collection === undefined) {\r\n                throw new Error(\"'collection' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/storage/{collection}\"\r\n                .replace(\"{collection}\", encodeURIComponent(String(collection)));\r\n            var queryParams = {\r\n                user_id: userId,\r\n                limit: limit,\r\n                cursor: cursor,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        listStorageObjects2: function (collection, userId, limit, cursor, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (collection === null || collection === undefined) {\r\n                throw new Error(\"'collection' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (userId === null || userId === undefined) {\r\n                throw new Error(\"'userId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/storage/{collection}/{user_id}\"\r\n                .replace(\"{collection}\", encodeURIComponent(String(collection)))\r\n                .replace(\"{user_id}\", encodeURIComponent(String(userId)));\r\n            var queryParams = {\r\n                limit: limit,\r\n                cursor: cursor,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        getUsers: function (ids, usernames, facebookIds, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var urlPath = \"/v2/user\";\r\n            var queryParams = {\r\n                ids: ids,\r\n                usernames: usernames,\r\n                facebook_ids: facebookIds,\r\n            };\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n        listUserGroups: function (userId, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (userId === null || userId === undefined) {\r\n                throw new Error(\"'userId' is a required parameter but is null or undefined.\");\r\n            }\r\n            var urlPath = \"/v2/user/{user_id}/group\"\r\n                .replace(\"{user_id}\", encodeURIComponent(String(userId)));\r\n            var queryParams = {};\r\n            var urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(function (k) {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce(function (prev, curr) {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            var fetchOptions = __assign({ method: \"GET\" }, options);\r\n            var headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            };\r\n            if (configuration.bearerToken) {\r\n                headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            fetchOptions.headers = __assign({}, headers, options.headers);\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                    if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise(function (_, reject) {\r\n                    return setTimeout(reject, configuration.timeoutMs, \"Request timed out.\");\r\n                }),\r\n            ]);\r\n        },\r\n    };\r\n};\n\nvar Session = (function () {\r\n    function Session(token, created_at, expires_at, username, user_id) {\r\n        this.token = token;\r\n        this.created_at = created_at;\r\n        this.expires_at = expires_at;\r\n        this.username = username;\r\n        this.user_id = user_id;\r\n    }\r\n    Session.prototype.isexpired = function (currenttime) {\r\n        return (this.expires_at - currenttime) < 0;\r\n    };\r\n    Session.restore = function (jwt) {\r\n        var createdAt = Math.floor(new Date().getTime() / 1000);\r\n        var parts = jwt.split('.');\r\n        if (parts.length != 3) {\r\n            throw 'jwt is not valid.';\r\n        }\r\n        var decoded = JSON.parse(atob(parts[1]));\r\n        var expiresAt = Math.floor(parseInt(decoded['exp']));\r\n        return new Session(jwt, createdAt, expiresAt, decoded['usn'], decoded['uid']);\r\n    };\r\n    return Session;\r\n}());\n\nvar DefaultSocket = (function () {\r\n    function DefaultSocket(host, port, useSSL, verbose) {\r\n        if (useSSL === void 0) { useSSL = false; }\r\n        if (verbose === void 0) { verbose = false; }\r\n        this.host = host;\r\n        this.port = port;\r\n        this.useSSL = useSSL;\r\n        this.verbose = verbose;\r\n        this.cIds = {};\r\n    }\r\n    DefaultSocket.prototype.generatecid = function () {\r\n        return __spread(Array(30)).map(function () { return Math.random().toString(36)[3]; }).join('');\r\n    };\r\n    DefaultSocket.prototype.connect = function (session, createStatus) {\r\n        var _this = this;\r\n        if (createStatus === void 0) { createStatus = false; }\r\n        if (this.socket != undefined) {\r\n            return Promise.resolve(session);\r\n        }\r\n        var scheme = (this.useSSL) ? \"wss://\" : \"ws://\";\r\n        var url = \"\" + scheme + this.host + \":\" + this.port + \"/ws?lang=en&status=\" + encodeURIComponent(createStatus.toString()) + \"&token=\" + encodeURIComponent(session.token);\r\n        var socket = new WebSocket(url);\r\n        this.socket = socket;\r\n        socket.onclose = function (evt) {\r\n            _this.ondisconnect(evt);\r\n            _this.socket = undefined;\r\n        };\r\n        socket.onerror = function (evt) {\r\n            _this.onerror(evt);\r\n        };\r\n        socket.onmessage = function (evt) {\r\n            var message = JSON.parse(evt.data);\r\n            if (_this.verbose && window && window.console) {\r\n                console.log(\"Response: %o\", message);\r\n            }\r\n            if (message.cid == undefined) {\r\n                if (message.notifications) {\r\n                    message.notifications.notifications.forEach(function (n) {\r\n                        var notification = {\r\n                            code: n.code,\r\n                            create_time: n.create_time,\r\n                            id: n.id,\r\n                            persistent: n.persistent,\r\n                            sender_id: n.sender_id,\r\n                            subject: n.subject,\r\n                            content: n.content ? JSON.parse(n.content) : undefined\r\n                        };\r\n                        _this.onnotification(notification);\r\n                    });\r\n                }\r\n                else if (message.match_data) {\r\n                    message.match_data.data = message.match_data.data != null ? JSON.parse(atob(message.match_data.data)) : null;\r\n                    message.match_data.op_code = parseInt(message.match_data.op_code);\r\n                    _this.onmatchdata(message.match_data);\r\n                }\r\n                else if (message.match_presence_event) {\r\n                    _this.onmatchpresence(message.match_presence_event);\r\n                }\r\n                else if (message.matchmaker_matched) {\r\n                    _this.onmatchmakermatched(message.matchmaker_matched);\r\n                }\r\n                else if (message.status_presence_event) {\r\n                    _this.onstatuspresence(message.status_presence_event);\r\n                }\r\n                else if (message.stream_presence_event) {\r\n                    _this.onstreampresence(message.stream_presence_event);\r\n                }\r\n                else if (message.stream_data) {\r\n                    _this.onstreamdata(message.stream_data);\r\n                }\r\n                else if (message.channel_message) {\r\n                    message.channel_message.content = JSON.parse(message.channel_message.content);\r\n                    _this.onchannelmessage(message.channel_message);\r\n                }\r\n                else if (message.channel_presence_event) {\r\n                    _this.onchannelpresence(message.channel_presence_event);\r\n                }\r\n                else {\r\n                    if (_this.verbose && window && window.console) {\r\n                        console.log(\"Unrecognized message received: %o\", message);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var executor = _this.cIds[message.cid];\r\n                if (!executor) {\r\n                    if (_this.verbose && window && window.console) {\r\n                        console.error(\"No promise executor for message: %o\", message);\r\n                    }\r\n                    return;\r\n                }\r\n                delete _this.cIds[message.cid];\r\n                if (message.error) {\r\n                    executor.reject(message.error);\r\n                }\r\n                else {\r\n                    executor.resolve(message);\r\n                }\r\n            }\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            socket.onopen = function (evt) {\r\n                if (_this.verbose && window && window.console) {\r\n                    console.log(evt);\r\n                }\r\n                resolve(session);\r\n            };\r\n            socket.onerror = function (evt) {\r\n                reject(evt);\r\n                socket.close();\r\n                _this.socket = undefined;\r\n            };\r\n        });\r\n    };\r\n    DefaultSocket.prototype.disconnect = function (fireDisconnectEvent) {\r\n        if (fireDisconnectEvent === void 0) { fireDisconnectEvent = true; }\r\n        if (this.socket != undefined) {\r\n            this.socket.close();\r\n        }\r\n        if (fireDisconnectEvent) {\r\n            this.ondisconnect({});\r\n        }\r\n    };\r\n    DefaultSocket.prototype.ondisconnect = function (evt) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(evt);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.onerror = function (evt) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(evt);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.onchannelmessage = function (channelMessage) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(channelMessage);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.onchannelpresence = function (channelPresence) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(channelPresence);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.onnotification = function (notification) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(notification);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.onmatchdata = function (matchData) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(matchData);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.onmatchpresence = function (matchPresence) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(matchPresence);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.onmatchmakermatched = function (matchmakerMatched) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(matchmakerMatched);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.onstatuspresence = function (statusPresence) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(statusPresence);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.onstreampresence = function (streamPresence) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(streamPresence);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.onstreamdata = function (streamData) {\r\n        if (this.verbose && window && window.console) {\r\n            console.log(streamData);\r\n        }\r\n    };\r\n    DefaultSocket.prototype.send = function (message) {\r\n        var _this = this;\r\n        var m = message;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.socket == undefined) {\r\n                reject(\"Socket connection has not been established yet.\");\r\n            }\r\n            else {\r\n                if (m.match_data_send) {\r\n                    m.match_data_send.data = btoa(JSON.stringify(m.match_data_send.data));\r\n                    m.match_data_send.op_code = m.match_data_send.op_code.toString();\r\n                    _this.socket.send(JSON.stringify(m));\r\n                    resolve();\r\n                }\r\n                else {\r\n                    if (m.channel_message_send) {\r\n                        m.channel_message_send.content = JSON.stringify(m.channel_message_send.content);\r\n                    }\r\n                    else if (m.channel_message_update) {\r\n                        m.channel_message_update.content = JSON.stringify(m.channel_message_update.content);\r\n                    }\r\n                    var cid = _this.generatecid();\r\n                    _this.cIds[cid] = {\r\n                        resolve: resolve,\r\n                        reject: reject\r\n                    };\r\n                    m.cid = cid;\r\n                    _this.socket.send(JSON.stringify(m));\r\n                }\r\n            }\r\n            if (_this.verbose && window && window.console) {\r\n                console.log(\"Sent message: %o\", m);\r\n            }\r\n        });\r\n    };\r\n    return DefaultSocket;\r\n}());\n\nvar DEFAULT_HOST = \"127.0.0.1\";\r\nvar DEFAULT_PORT = \"7350\";\r\nvar DEFAULT_SERVER_KEY = \"defaultkey\";\r\nvar DEFAULT_TIMEOUT_MS = 7000;\r\nvar Client = (function () {\r\n    function Client(serverkey, host, port, useSSL, timeout, verbose) {\r\n        if (serverkey === void 0) { serverkey = DEFAULT_SERVER_KEY; }\r\n        if (host === void 0) { host = DEFAULT_HOST; }\r\n        if (port === void 0) { port = DEFAULT_PORT; }\r\n        if (useSSL === void 0) { useSSL = false; }\r\n        if (timeout === void 0) { timeout = DEFAULT_TIMEOUT_MS; }\r\n        if (verbose === void 0) { verbose = false; }\r\n        this.serverkey = serverkey;\r\n        this.host = host;\r\n        this.port = port;\r\n        this.useSSL = useSSL;\r\n        this.timeout = timeout;\r\n        this.verbose = verbose;\r\n        var scheme = (useSSL) ? \"https://\" : \"http://\";\r\n        var basePath = \"\" + scheme + host + \":\" + port;\r\n        this.configuration = {\r\n            basePath: basePath,\r\n            username: serverkey,\r\n            password: \"\",\r\n            timeoutMs: timeout,\r\n        };\r\n        this.apiClient = NakamaApi(this.configuration);\r\n    }\r\n    Client.prototype.addGroupUsers = function (session, groupId, ids) {\r\n        var _this = this;\r\n        this.configuration.bearerToken = (session && session.token);\r\n        var urlPath = \"/v2/group/\" + groupId + \"/add\";\r\n        var queryParams = {\r\n            user_ids: ids\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (response) {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    };\r\n    Client.prototype.addFriends = function (session, ids, usernames) {\r\n        var _this = this;\r\n        this.configuration.bearerToken = (session && session.token);\r\n        var urlPath = \"/v2/friend\";\r\n        var queryParams = {\r\n            ids: ids,\r\n            usernames: usernames\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (response) {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    };\r\n    Client.prototype.authenticateCustom = function (request) {\r\n        var _this = this;\r\n        var urlPath = \"/v2/account/authenticate/custom\";\r\n        var queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            id: request.id\r\n        });\r\n        console.log;\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (apiSession) {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    };\r\n    Client.prototype.authenticateDevice = function (request) {\r\n        var _this = this;\r\n        var urlPath = \"/v2/account/authenticate/device\";\r\n        var queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            id: request.id\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (apiSession) {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    };\r\n    Client.prototype.authenticateEmail = function (request) {\r\n        var _this = this;\r\n        var urlPath = \"/v2/account/authenticate/email\";\r\n        var queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            email: request.email,\r\n            password: request.password\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (apiSession) {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    };\r\n    Client.prototype.authenticateFacebook = function (request) {\r\n        var _this = this;\r\n        var urlPath = \"/v2/account/authenticate/facebook\";\r\n        var queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            token: request.token\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (apiSession) {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    };\r\n    Client.prototype.authenticateGoogle = function (request) {\r\n        var _this = this;\r\n        var urlPath = \"/v2/account/authenticate/google\";\r\n        var queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            token: request.token\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (apiSession) {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    };\r\n    Client.prototype.authenticateGameCenter = function (request) {\r\n        var _this = this;\r\n        var urlPath = \"/v2/account/authenticate/gamecenter\";\r\n        var queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            bundle_id: request.bundle_id,\r\n            player_id: request.player_id,\r\n            public_key_url: request.public_key_url,\r\n            salt: request.salt,\r\n            signature: request.signature,\r\n            timestamp_seconds: request.timestamp_seconds\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (apiSession) {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    };\r\n    Client.prototype.authenticateSteam = function (request) {\r\n        var _this = this;\r\n        var urlPath = \"/v2/account/authenticate/steam\";\r\n        var queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            token: request.token\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (apiSession) {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    };\r\n    Client.prototype.blockFriends = function (session, ids, usernames) {\r\n        var _this = this;\r\n        this.configuration.bearerToken = (session && session.token);\r\n        var urlPath = \"/v2/friend/block\";\r\n        var queryParams = {\r\n            ids: ids,\r\n            usernames: usernames\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (response) {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    };\r\n    Client.prototype.createGroup = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.createGroup(request).then(function (response) {\r\n            return Promise.resolve({\r\n                avatar_url: response.avatar_url,\r\n                create_time: response.create_time,\r\n                creator_id: response.creator_id,\r\n                description: response.description,\r\n                edge_count: response.edge_count,\r\n                id: response.id,\r\n                lang_tag: response.lang_tag,\r\n                max_count: response.max_count,\r\n                metadata: response.metadata ? JSON.parse(response.metadata) : null,\r\n                name: response.name,\r\n                open: response.open,\r\n                update_time: response.update_time\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.createSocket = function (useSSL, verbose) {\r\n        if (useSSL === void 0) { useSSL = false; }\r\n        if (verbose === void 0) { verbose = false; }\r\n        return new DefaultSocket(this.host, this.port, useSSL, verbose);\r\n    };\r\n    Client.prototype.deleteFriends = function (session, ids, usernames) {\r\n        var _this = this;\r\n        this.configuration.bearerToken = (session && session.token);\r\n        var urlPath = \"/v2/friend\";\r\n        var queryParams = {\r\n            ids: ids,\r\n            usernames: usernames\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"DELETE\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (response) {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    };\r\n    Client.prototype.deleteGroup = function (session, groupId) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.deleteGroup(groupId).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.deleteNotifications = function (session, ids) {\r\n        var _this = this;\r\n        this.configuration.bearerToken = (session && session.token);\r\n        var urlPath = \"/v2/notification\";\r\n        var queryParams = {\r\n            ids: ids\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"DELETE\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (response) {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    };\r\n    Client.prototype.deleteStorageObjects = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.deleteStorageObjects(request).then(function (response) {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    };\r\n    Client.prototype.getAccount = function (session) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.getAccount();\r\n    };\r\n    Client.prototype.importFacebookFriends = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.importFacebookFriends(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.getUsers = function (session, ids, usernames, facebookIds) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.getUsers(ids, usernames, facebookIds).then(function (response) {\r\n            var result = {\r\n                users: []\r\n            };\r\n            if (response.users == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.users.forEach(function (u) {\r\n                result.users.push({\r\n                    avatar_url: u.avatar_url,\r\n                    create_time: u.create_time,\r\n                    display_name: u.display_name,\r\n                    edge_count: u.edge_count,\r\n                    facebook_id: u.facebook_id,\r\n                    gamecenter_id: u.gamecenter_id,\r\n                    google_id: u.google_id,\r\n                    id: u.id,\r\n                    lang_tag: u.lang_tag,\r\n                    location: u.location,\r\n                    online: u.online,\r\n                    steam_id: u.steam_id,\r\n                    timezone: u.timezone,\r\n                    update_time: u.update_time,\r\n                    username: u.username,\r\n                    metadata: u.metadata ? JSON.parse(u.metadata) : null\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    };\r\n    Client.prototype.joinGroup = function (session, groupId) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.joinGroup(groupId, {}).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.kickGroupUsers = function (session, groupId, ids) {\r\n        var _this = this;\r\n        this.configuration.bearerToken = (session && session.token);\r\n        var urlPath = \"/v2/group/\" + groupId + \"/kick\";\r\n        var queryParams = {\r\n            user_ids: ids\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (response) {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    };\r\n    Client.prototype.leaveGroup = function (session, groupId) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.leaveGroup(groupId, {}).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.listChannelMessages = function (session, channelId, limit, forward, cursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listChannelMessages(channelId, limit, forward, cursor).then(function (response) {\r\n            var result = {\r\n                messages: [],\r\n                next_cursor: response.next_cursor,\r\n                prev_cursor: response.prev_cursor\r\n            };\r\n            if (response.messages == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.messages.forEach(function (m) {\r\n                result.messages.push({\r\n                    channel_id: m.channel_id,\r\n                    code: m.code,\r\n                    create_time: m.create_time,\r\n                    message_id: m.message_id,\r\n                    persistent: m.persistent,\r\n                    sender_id: m.sender_id,\r\n                    update_time: m.update_time,\r\n                    username: m.username,\r\n                    content: m.content ? JSON.parse(m.content) : null\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    };\r\n    Client.prototype.listGroupUsers = function (session, groupId) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listGroupUsers(groupId).then(function (response) {\r\n            var result = {\r\n                group_users: []\r\n            };\r\n            if (response.group_users == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.group_users.forEach(function (gu) {\r\n                result.group_users.push({\r\n                    user: {\r\n                        avatar_url: gu.user.avatar_url,\r\n                        create_time: gu.user.create_time,\r\n                        display_name: gu.user.display_name,\r\n                        edge_count: gu.user.edge_count,\r\n                        facebook_id: gu.user.facebook_id,\r\n                        gamecenter_id: gu.user.gamecenter_id,\r\n                        google_id: gu.user.google_id,\r\n                        id: gu.user.id,\r\n                        lang_tag: gu.user.lang_tag,\r\n                        location: gu.user.location,\r\n                        online: gu.user.online,\r\n                        steam_id: gu.user.steam_id,\r\n                        timezone: gu.user.timezone,\r\n                        update_time: gu.user.update_time,\r\n                        username: gu.user.username,\r\n                        metadata: gu.user.metadata ? JSON.parse(gu.user.metadata) : null\r\n                    },\r\n                    state: gu.state\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    };\r\n    Client.prototype.listUserGroups = function (session, userId) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listUserGroups(userId).then(function (response) {\r\n            var result = {\r\n                user_groups: []\r\n            };\r\n            if (response.user_groups == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.user_groups.forEach(function (ug) {\r\n                result.user_groups.push({\r\n                    group: {\r\n                        avatar_url: ug.group.avatar_url,\r\n                        create_time: ug.group.create_time,\r\n                        creator_id: ug.group.creator_id,\r\n                        description: ug.group.description,\r\n                        edge_count: ug.group.edge_count,\r\n                        id: ug.group.id,\r\n                        lang_tag: ug.group.lang_tag,\r\n                        max_count: ug.group.max_count,\r\n                        metadata: ug.group.metadata ? JSON.parse(ug.group.metadata) : null,\r\n                        name: ug.group.name,\r\n                        open: ug.group.open,\r\n                        update_time: ug.group.update_time\r\n                    },\r\n                    state: ug.state\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    };\r\n    Client.prototype.listGroups = function (session, name, cursor, limit) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listGroups(name, cursor, limit).then(function (response) {\r\n            var result = {\r\n                groups: []\r\n            };\r\n            if (response.groups == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            result.cursor = response.cursor;\r\n            response.groups.forEach(function (ug) {\r\n                result.groups.push({\r\n                    avatar_url: ug.avatar_url,\r\n                    create_time: ug.create_time,\r\n                    creator_id: ug.creator_id,\r\n                    description: ug.description,\r\n                    edge_count: ug.edge_count,\r\n                    id: ug.id,\r\n                    lang_tag: ug.lang_tag,\r\n                    max_count: ug.max_count,\r\n                    metadata: ug.metadata ? JSON.parse(ug.metadata) : null,\r\n                    name: ug.name,\r\n                    open: ug.open,\r\n                    update_time: ug.update_time\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    };\r\n    Client.prototype.linkCustom = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkCustom(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.linkDevice = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkDevice(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.linkEmail = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkEmail(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.linkFacebook = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkFacebook(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.linkGoogle = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkGoogle(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.linkGameCenter = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkGameCenter(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.linkSteam = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkSteam(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.listFriends = function (session) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listFriends().then(function (response) {\r\n            var result = {\r\n                friends: []\r\n            };\r\n            if (response.friends == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.friends.forEach(function (f) {\r\n                result.friends.push({\r\n                    user: {\r\n                        avatar_url: f.user.avatar_url,\r\n                        create_time: f.user.create_time,\r\n                        display_name: f.user.display_name,\r\n                        edge_count: f.user.edge_count,\r\n                        facebook_id: f.user.facebook_id,\r\n                        gamecenter_id: f.user.gamecenter_id,\r\n                        google_id: f.user.google_id,\r\n                        id: f.user.id,\r\n                        lang_tag: f.user.lang_tag,\r\n                        location: f.user.location,\r\n                        online: f.user.online,\r\n                        steam_id: f.user.steam_id,\r\n                        timezone: f.user.timezone,\r\n                        update_time: f.user.update_time,\r\n                        username: f.user.username,\r\n                        metadata: f.user.metadata ? JSON.parse(f.user.metadata) : null\r\n                    },\r\n                    state: f.state\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    };\r\n    Client.prototype.listLeaderboardRecords = function (session, leaderboardId, ownerIds, limit, cursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listLeaderboardRecords(leaderboardId, ownerIds, limit, cursor).then(function (response) {\r\n            var list = {\r\n                next_cursor: response.next_cursor,\r\n                prev_cursor: response.prev_cursor,\r\n                owner_records: [],\r\n                records: []\r\n            };\r\n            if (response.owner_records != null) {\r\n                response.owner_records.forEach(function (o) {\r\n                    list.owner_records.push({\r\n                        expiry_time: o.expiry_time,\r\n                        leaderboard_id: o.leaderboard_id,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        num_score: o.num_score,\r\n                        owner_id: o.owner_id,\r\n                        rank: Number(o.rank),\r\n                        score: Number(o.score),\r\n                        subscore: Number(o.subscore),\r\n                        update_time: o.update_time,\r\n                        username: o.username\r\n                    });\r\n                });\r\n            }\r\n            if (response.records != null) {\r\n                response.records.forEach(function (o) {\r\n                    list.records.push({\r\n                        expiry_time: o.expiry_time,\r\n                        leaderboard_id: o.leaderboard_id,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        num_score: o.num_score,\r\n                        owner_id: o.owner_id,\r\n                        rank: Number(o.rank),\r\n                        score: Number(o.score),\r\n                        subscore: Number(o.subscore),\r\n                        update_time: o.update_time,\r\n                        username: o.username\r\n                    });\r\n                });\r\n            }\r\n            return Promise.resolve(list);\r\n        });\r\n    };\r\n    Client.prototype.listMatches = function (session, limit, authoritative, label, minSize, maxSize) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listMatches(limit, authoritative, label, minSize, maxSize);\r\n    };\r\n    Client.prototype.listNotifications = function (session, limit, cacheableCursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listNotifications(limit, cacheableCursor).then(function (response) {\r\n            var result = {\r\n                cacheable_cursor: response.cacheable_cursor,\r\n                notifications: [],\r\n            };\r\n            if (response.notifications == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.notifications.forEach(function (n) {\r\n                result.notifications.push({\r\n                    code: n.code,\r\n                    create_time: n.create_time,\r\n                    id: n.id,\r\n                    persistent: n.persistent,\r\n                    sender_id: n.sender_id,\r\n                    subject: n.subject,\r\n                    content: n.content ? JSON.parse(n.content) : undefined\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    };\r\n    Client.prototype.listStorageObjects = function (session, collection, userId, limit, cursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listStorageObjects(collection, userId, limit, cursor).then(function (response) {\r\n            var result = {\r\n                objects: [],\r\n                cursor: response.cursor\r\n            };\r\n            if (response.objects == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.objects.forEach(function (o) {\r\n                result.objects.push({\r\n                    collection: o.collection,\r\n                    key: o.key,\r\n                    permission_read: o.permission_read,\r\n                    permission_write: o.permission_write,\r\n                    value: o.value ? JSON.parse(o.value) : null,\r\n                    version: o.version,\r\n                    user_id: o.user_id,\r\n                    create_time: o.create_time,\r\n                    update_time: o.update_time\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    };\r\n    Client.prototype.promoteGroupUsers = function (session, groupId, ids) {\r\n        var _this = this;\r\n        this.configuration.bearerToken = (session && session.token);\r\n        var urlPath = \"/v2/group/\" + groupId + \"/promote\";\r\n        var queryParams = {\r\n            user_ids: ids\r\n        };\r\n        var urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(function (k) {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce(function (prev, curr) {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        var fetchOptions = __assign({ method: \"POST\" });\r\n        var headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = __assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then(function (response) {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise(function (_, reject) {\r\n                return setTimeout(reject, _this.configuration.timeoutMs, \"Request timed out.\");\r\n            }),\r\n        ]).then(function (response) {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    };\r\n    Client.prototype.readStorageObjects = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.readStorageObjects(request).then(function (response) {\r\n            var result = { objects: [] };\r\n            if (response.objects == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.objects.forEach(function (o) {\r\n                result.objects.push({\r\n                    collection: o.collection,\r\n                    key: o.key,\r\n                    permission_read: o.permission_read,\r\n                    permission_write: o.permission_write,\r\n                    value: o.value ? JSON.parse(o.value) : null,\r\n                    version: o.version,\r\n                    user_id: o.user_id,\r\n                    create_time: o.create_time,\r\n                    update_time: o.update_time\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    };\r\n    Client.prototype.rpc = function (session, id, input) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.rpcFunc(id, JSON.stringify(input)).then(function (response) {\r\n            return Promise.resolve({\r\n                id: response.id,\r\n                payload: (!response.payload) ? null : JSON.parse(response.payload)\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.rpcGet = function (id, session, httpKey, input) {\r\n        var _this = this;\r\n        if (!httpKey || httpKey == \"\") {\r\n            this.configuration.bearerToken = (session && session.token);\r\n        }\r\n        else {\r\n            this.configuration.username = undefined;\r\n            this.configuration.bearerToken = undefined;\r\n        }\r\n        return this.apiClient.rpcFunc2(id, input && JSON.stringify(input) || \"\", httpKey)\r\n            .then(function (response) {\r\n            _this.configuration.username = _this.serverkey;\r\n            return Promise.resolve({\r\n                id: response.id,\r\n                payload: (!response.payload) ? null : JSON.parse(response.payload)\r\n            });\r\n        }).catch(function (err) {\r\n            _this.configuration.username = _this.serverkey;\r\n            throw err;\r\n        });\r\n    };\r\n    Client.prototype.unlinkCustom = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkCustom(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.unlinkDevice = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkDevice(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.unlinkEmail = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkEmail(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.unlinkFacebook = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkFacebook(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.unlinkGoogle = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkGoogle(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.unlinkGameCenter = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkGameCenter(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.unlinkSteam = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkSteam(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.updateAccount = function (session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.updateAccount(request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.updateGroup = function (session, groupId, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.updateGroup(groupId, request).then(function (response) {\r\n            return response !== undefined;\r\n        });\r\n    };\r\n    Client.prototype.writeLeaderboardRecord = function (session, leaderboardId, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.writeLeaderboardRecord(leaderboardId, {\r\n            metadata: request.metadata ? JSON.stringify(request.metadata) : undefined,\r\n            score: request.score,\r\n            subscore: request.subscore\r\n        }).then(function (response) {\r\n            return Promise.resolve({\r\n                expiry_time: response.expiry_time,\r\n                leaderboard_id: response.leaderboard_id,\r\n                metadata: response.metadata ? JSON.parse(response.metadata) : undefined,\r\n                num_score: response.num_score,\r\n                owner_id: response.owner_id,\r\n                score: Number(response.score),\r\n                subscore: Number(response.subscore),\r\n                update_time: response.update_time,\r\n                username: response.username\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.writeStorageObjects = function (session, objects) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        var request = { objects: [] };\r\n        objects.forEach(function (o) {\r\n            request.objects.push({\r\n                collection: o.collection,\r\n                key: o.key,\r\n                permission_read: o.permission_read,\r\n                permission_write: o.permission_write,\r\n                value: JSON.stringify(o.value),\r\n                version: o.version\r\n            });\r\n        });\r\n        return this.apiClient.writeStorageObjects(request);\r\n    };\r\n    return Client;\r\n}());\n\nexports.Client = Client;\nexports.Session = Session;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/// <reference path=\"../../../node_modules/@heroiclabs/nakama-js/dist/index.d.ts\" />\r\n// <script src=\"path/to/nakama-js.umd.js\"></script>\r\nimport { Client } from \"@heroiclabs/nakama-js\";\r\n\r\nclass NakamaClient {\r\n    private _client: any;\r\n    constructor() {\r\n        this._client = this.connect();\r\n    }\r\n\r\n    connect() {\r\n        const client = new Client(\"defaultkey\", \"95.216.171.225\", '7350');\r\n        client.useSSL = true;\r\n\r\n        return client;\r\n    }\r\n}\r\n\r\nexport default NakamaClient;","import { Tank, TankDirections } from \"./tank/tank\";\r\nimport { TankAmunnition } from \"./tank/ammunition\";\r\nimport { BaseDrawObject, MathLib, Colors, Game, ClashPhysicEvent, StrikingDistancePhysicEvent } from \"./game-framework\";\r\nimport { Enemy } from \"./enemies/enemy\";\r\nimport NakamaClient from \"./realtime-server/client\";\r\nimport { Shrapnel } from \"./bullets/shrapnel\";\r\nimport { List } from \"../common/list\";\r\n\r\nexport class RechargeTankTower {\r\n    startRifflePosition = 0;\r\n    private _step: number;\r\n\r\n    constructor(public endRifflePosition: number, step: number) {\r\n        this._step = step;\r\n    }\r\n\r\n    get inProccess() { return this.startRifflePosition > 0; }\r\n\r\n    process() {\r\n        if (this.inProccess) {\r\n            this.startRifflePosition -= this._step;\r\n        }\r\n    }\r\n\r\n    start(devicePixelRatio: number) {\r\n        this.startRifflePosition = this.endRifflePosition * devicePixelRatio;\r\n    }\r\n}\r\n\r\nclass Ghost extends BaseDrawObject {\r\n    positionX: number;\r\n    positionY: number;\r\n    private _radius: number;\r\n    private _ghostColor: string;\r\n    private _speedLevel: number;\r\n\r\n    constructor(startPositionX: number, startPositionY: number, speedLevel: number) {\r\n        super();\r\n\r\n        this.positionX = startPositionX;\r\n        this.positionY = startPositionY;\r\n\r\n        this._radius = 10;\r\n\r\n        this._ghostColor = Colors.getRandomColor();\r\n        this._speedLevel = speedLevel;\r\n    }\r\n\r\n    get height() { return this._radius * 2; }\r\n    get width() { return this._radius * 2; }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, deviceRatio: number) {\r\n        ctx.fillStyle = this._ghostColor;\r\n        ctx.beginPath();\r\n        ctx.arc(this.positionX, this.positionY, this._radius * deviceRatio, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n\r\n        ctx.fillStyle = Colors.black;\r\n\r\n        this.move(deviceRatio);\r\n    }\r\n\r\n    move(deviceRatio: number) {\r\n        //this.positionX -= MathLib.getRandomInt(2);\r\n        this.positionY += MathLib.getRandomInt(2) * this._speedLevel * deviceRatio;\r\n    }\r\n}\r\n\r\nclass TankPanelAmmunition {\r\n    private _panel: Element;\r\n    constructor(ammunition: TankAmunnition) {\r\n        this._panel = document.getElementsByClassName('tank-ammunition-panel-inner')[0];\r\n        this.init(ammunition);\r\n\r\n        ammunition.onchange(this.change);\r\n    }\r\n\r\n    init(ammunition: TankAmunnition) {\r\n        var sections = [];\r\n        for (var shells of ammunition.ammunitions) {\r\n            var section = this.drawPanelSection(shells[0], shells[1]);\r\n            sections.push(section);\r\n        }\r\n\r\n        this._panel.innerHTML = sections.join('');\r\n    }\r\n\r\n    change(key: string, value: number) {\r\n        document.getElementById(key).innerText = value.toString();\r\n    }\r\n\r\n    drawPanelSection(key: string, value: number) {\r\n        return '<div class=\"form-group\">' +\r\n            `<label>${key}</label>` +\r\n            `<span id=\"${key}\">${value}</span>` +\r\n            '</div>';\r\n    }\r\n}\r\n\r\nclass TankGame {\r\n    tankPanelAmmunition: TankPanelAmmunition;\r\n    game: Game;\r\n    constructor(public enemyCount: number, public enemySpeedLevel: number) {\r\n    }\r\n\r\n    get sceneWidth() { return 800; }\r\n    get sceneHeight() { return window.innerHeight; }\r\n\r\n    start() {\r\n        var game = new Game(\"scene\", this.sceneWidth, this.sceneHeight);\r\n        var tank = new Tank(game.scene.width / 2, game.scene.height - 50 * game.scene.devicePixelRatio, 10);\r\n        var client = new NakamaClient();\r\n\r\n        var startTankAmmunition = new TankAmunnition();\r\n        startTankAmmunition.bullets = 20;\r\n        startTankAmmunition.shrapnels = 30;\r\n\r\n        tank.addAmunnition(startTankAmmunition);\r\n\r\n        this.tankPanelAmmunition = new TankPanelAmmunition(tank.ammunition);\r\n\r\n        // var ghosts = this.generateGhosts(this._enemyCount, this._enemySpeedLevel, game.scene.width);\r\n        const enemies = this.generateEnemies(this.enemyCount, this.enemySpeedLevel, game.scene.width);\r\n\r\n        const keyboardsEvents = {\r\n            'ArrowUp': () => tank.move(TankDirections.Up),\r\n            'ArrowDown': () => tank.move(TankDirections.Down),\r\n            'ArrowRight': () => tank.move(TankDirections.Right),\r\n            'ArrowLeft': () => tank.move(TankDirections.Left),\r\n            'Space': () => tankFire(),\r\n            'KeyC': () => tank.changeTower()\r\n        };\r\n\r\n        game.scene.addDrawObjects(enemies);\r\n        game.scene.addDrawObject(tank);\r\n        game.registerKeyBoardEvents(keyboardsEvents);\r\n        game.run();\r\n\r\n        function tankFire() {\r\n            var bullets = tank.fire();\r\n            for (var bullet of bullets) {\r\n                game.scene.addDrawObject(bullet);\r\n\r\n                const shrapnel: Shrapnel = <Shrapnel>bullet;\r\n                const animation = typeof shrapnel.createStrikeAnimation == 'function' ? shrapnel.createStrikeAnimation() : null;\r\n\r\n                let event = new ClashPhysicEvent(bullet, enemies, animation);\r\n                game.scene.addPhysicEvent(event);\r\n\r\n                if (shrapnel.strikingDistance && animation) {\r\n                    let event = new StrikingDistancePhysicEvent(bullet, bullet.positionY, shrapnel.strikingDistance, animation);\r\n                    game.scene.addPhysicEvent(event);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.game = game;\r\n    }\r\n\r\n    restart() {\r\n        this.game.destroy();\r\n        this.start();\r\n    }\r\n\r\n    generateGhosts(enemyCount: number, enemySpeedLevel: number, sceneWidth: number) {\r\n        let ghostArray = [];\r\n        for (let i = 0; i < enemyCount; i++) {\r\n            let randomX = Math.random();\r\n            if (!randomX)\r\n                randomX = 2;\r\n\r\n            ghostArray.push(new Ghost(sceneWidth * randomX, 0, enemySpeedLevel));\r\n        }\r\n        return ghostArray;\r\n    }\r\n\r\n    generateEnemies(enemyCount: number, enemySpeedLevel: number, sceneWidth: number): List<any> {\r\n        let enemies = new List<any>();\r\n        for (let i = 0; i < enemyCount; i++) {\r\n            let randomX = Math.random();\r\n            if (!randomX)\r\n                randomX = 2;\r\n\r\n            enemies.push(new Enemy(sceneWidth * randomX, 0, enemySpeedLevel));\r\n        }\r\n        return enemies;\r\n    }\r\n}\r\n\r\nvar tankGame = new TankGame(1, 1);\r\n\r\ntankGame.start();\r\n\r\ndocument.getElementById('startNewGame')\r\n    .addEventListener('click', function (event) {\r\n        tankGame.enemyCount = getIntValueFromInput('enemyCount', 1);\r\n        tankGame.enemySpeedLevel = getIntValueFromInput('enemySpeedLevel', 1);\r\n        tankGame.restart();\r\n        window.focus();\r\n\r\n        // Remove focus from any focused element\r\n        if (document.activeElement) {\r\n            (<HTMLElement>document.activeElement).blur();\r\n        }\r\n    });\r\n\r\nfunction getIntValueFromInput(inputId: string, defaultValue: number) {\r\n    var value = (<HTMLInputElement>document.getElementById(inputId)).value;\r\n    var intValue = parseInt(value);\r\n    return isNaN(intValue) ? defaultValue : intValue;\r\n}\r\n\r\n//old\r\n// class Wall extends BaseDrawObject {\r\n\r\n//     constructor(positionX: any, positionY: any, side: any) {\r\n//         super();\r\n\r\n//         this.positionX = positionX;\r\n//         this.positionY = positionY;\r\n//         this._side = side;\r\n//     }\r\n\r\n//     draw(ctx) {\r\n//         switch (this._side) {\r\n//             case 'right':\r\n//                 ctx.fillRect(this.positionX, this.positionY, 1, 20);\r\n//                 break;\r\n//             case 'left':\r\n//                 ctx.fillRect(this.positionX, this.positionY, 20, 1);\r\n//                 break;\r\n//             default:\r\n//                 break;\r\n//         }\r\n//     }\r\n// }\r\n\r\n// function generateWalls() {\r\n//     var wallSize = 40;\r\n//     var wallsCount = sceneWidth / wallSize;\r\n//     var wallsArray = [];\r\n//     for (var i = 0; i < wallsCount; i++) {\r\n//         for (var j = 0; j < wallsCount; j++) {\r\n//             var rightWall = new Wall(wallSize * i, wallSize * j, 'right');\r\n//             var leftWall = new Wall(wallSize * i, wallSize * j, 'left');\r\n\r\n//             wallsArray.push(rightWall);\r\n//             wallsArray.push(leftWall);\r\n//         }\r\n//     }\r\n\r\n//     return wallsArray;\r\n// }","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}